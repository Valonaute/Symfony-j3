<?php

namespace ContainerWSjNv1c;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_59Sg2WWService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.59Sg2WW' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.59Sg2WW'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'App\\Controller\\AddressController::deleteAddress' => ['privates', '.service_locator.VN7ySI4', 'get_ServiceLocator_VN7ySI4Service', true],
            'App\\Controller\\AddressController::showAddress' => ['privates', '.service_locator.UEaQkNf', 'get_ServiceLocator_UEaQkNfService', true],
            'App\\Controller\\AddressController::updateAddress' => ['privates', '.service_locator.VN7ySI4', 'get_ServiceLocator_VN7ySI4Service', true],
            'App\\Controller\\CustomerController::deleteCustomer' => ['privates', '.service_locator.HvKkh26', 'get_ServiceLocator_HvKkh26Service', true],
            'App\\Controller\\CustomerController::showcustomer' => ['privates', '.service_locator.o_1Ey3a', 'get_ServiceLocator_O1Ey3aService', true],
            'App\\Controller\\CustomerController::updateCustomer' => ['privates', '.service_locator.HvKkh26', 'get_ServiceLocator_HvKkh26Service', true],
            'App\\Kernel::loadRoutes' => ['privates', '.service_locator.y4_Zrx.', 'get_ServiceLocator_Y4Zrx_Service', true],
            'App\\Kernel::registerContainerConfiguration' => ['privates', '.service_locator.y4_Zrx.', 'get_ServiceLocator_Y4Zrx_Service', true],
            'kernel::loadRoutes' => ['privates', '.service_locator.y4_Zrx.', 'get_ServiceLocator_Y4Zrx_Service', true],
            'kernel::registerContainerConfiguration' => ['privates', '.service_locator.y4_Zrx.', 'get_ServiceLocator_Y4Zrx_Service', true],
            'App\\Controller\\AddressController:deleteAddress' => ['privates', '.service_locator.VN7ySI4', 'get_ServiceLocator_VN7ySI4Service', true],
            'App\\Controller\\AddressController:showAddress' => ['privates', '.service_locator.UEaQkNf', 'get_ServiceLocator_UEaQkNfService', true],
            'App\\Controller\\AddressController:updateAddress' => ['privates', '.service_locator.VN7ySI4', 'get_ServiceLocator_VN7ySI4Service', true],
            'App\\Controller\\CustomerController:deleteCustomer' => ['privates', '.service_locator.HvKkh26', 'get_ServiceLocator_HvKkh26Service', true],
            'App\\Controller\\CustomerController:showcustomer' => ['privates', '.service_locator.o_1Ey3a', 'get_ServiceLocator_O1Ey3aService', true],
            'App\\Controller\\CustomerController:updateCustomer' => ['privates', '.service_locator.HvKkh26', 'get_ServiceLocator_HvKkh26Service', true],
            'kernel:loadRoutes' => ['privates', '.service_locator.y4_Zrx.', 'get_ServiceLocator_Y4Zrx_Service', true],
            'kernel:registerContainerConfiguration' => ['privates', '.service_locator.y4_Zrx.', 'get_ServiceLocator_Y4Zrx_Service', true],
        ], [
            'App\\Controller\\AddressController::deleteAddress' => '?',
            'App\\Controller\\AddressController::showAddress' => '?',
            'App\\Controller\\AddressController::updateAddress' => '?',
            'App\\Controller\\CustomerController::deleteCustomer' => '?',
            'App\\Controller\\CustomerController::showcustomer' => '?',
            'App\\Controller\\CustomerController::updateCustomer' => '?',
            'App\\Kernel::loadRoutes' => '?',
            'App\\Kernel::registerContainerConfiguration' => '?',
            'kernel::loadRoutes' => '?',
            'kernel::registerContainerConfiguration' => '?',
            'App\\Controller\\AddressController:deleteAddress' => '?',
            'App\\Controller\\AddressController:showAddress' => '?',
            'App\\Controller\\AddressController:updateAddress' => '?',
            'App\\Controller\\CustomerController:deleteCustomer' => '?',
            'App\\Controller\\CustomerController:showcustomer' => '?',
            'App\\Controller\\CustomerController:updateCustomer' => '?',
            'kernel:loadRoutes' => '?',
            'kernel:registerContainerConfiguration' => '?',
        ]);
    }
}
